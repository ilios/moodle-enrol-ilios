define("enrol_ilios/main",["exports","core/url","core/notification"],(function(_exports,_url,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Attaches event handlers for dynamic data loading to dropdown-selects in the new instance form.
   *
   * @module enrol_ilios/main
   * @copyright The Regents of the University of California
   * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_url=_interopRequireDefault(_url),_notification=_interopRequireDefault(_notification);_exports.init=courseId=>{const SELECTORS=["selectschool","selectprogram","selectcohort","selectlearnergroup","selectsubgroup"],getElementForSelector=function(selector){return document.getElementById("id_".concat(selector))},resetSelectors=function(selectors){selectors.forEach((selector=>function(selector){const element=getElementForSelector(selector);element.selectedIndex=0,element.disabled=!0,element.querySelectorAll("option:not(:first-child)").forEach((option=>option.remove()))}(selector)))},registerSelectorChangeHandler=function(selector){const subSelectors=function(selector){return SELECTORS.slice(SELECTORS.indexOf(selector)+1)}(selector);if(!subSelectors.length)return;const nextSelector=subSelectors[0],element=getElementForSelector(selector),action=function(selector){const name=getElementForSelector(selector).name;return"get".concat(name,"options")}(nextSelector);element.addEventListener("change",(async e=>{resetSelectors(subSelectors);const value=e.currentTarget.value;if(-1===value.indexOf(":"))return;const filter=value.split(":")[0],userType=document.getElementById("id_selectusertype").value,url=function(id,action,filterid,usertype){return _url.default.relativeUrl("/enrol/ilios/ajax.php",{id:id,action:action,filterid:filterid,usertype:usertype},!0)}(courseId,action,filter,userType);try{const response=await fetch(url);if(!response.ok)throw new Error("Request failed with response status: ".concat(response.status));const json=await response.json();!function(selector,options){const selectElement=getElementForSelector(selector),temp=[];for(let key in options){const value=options[key];temp.push({key:key,value:value})}temp.sort(((a,b)=>a.value.localeCompare(b.value)||(a.key>b.key?1:a.key<b.key?-1:0))).forEach((option=>{const optionEl=new Option(option.value,option.key);selectElement.appendChild(optionEl)}))}(nextSelector,json.response),getElementForSelector(nextSelector).disabled=!1}catch(error){await _notification.default.exception(error)}}))};SELECTORS.forEach((selector=>{registerSelectorChangeHandler(selector)}))}}));

//# sourceMappingURL=main.min.js.map